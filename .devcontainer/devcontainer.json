// For format details, see
// https://aka.ms/devcontainer.json.
//
// For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.194.0/containers/docker-from-docker-compose
{
	// "forwardPorts": [],
	"extensions": [
		"BazelBuild.vscode-bazel",
		"cschlosser.doxdocgen",
		"jeff-hykin.better-cpp-syntax",
		"k--kato.intellij-idea-keybindings",
		"llvm-vs-code-extensions.vscode-clangd",
		"vadimcn.vscode-lldb",
		"webfreak.debug",
		"xaver.clang-format",
	],
	"settings": {
		"[c]": {
			"editor.defaultFormatter": "xaver.clang-format"
		},
		"[cpp]": {
			"editor.defaultFormatter": "xaver.clang-format"
		},
		"bazel.buildifierFixOnFormat": true,
		"bazel.commandLine.commandArgs": [],
		"C_Cpp.clang_format_fallbackStyle": "Google",
		"C_Cpp.default.cppStandard": "c++17",
		"C_Cpp.default.cStandard": "c11",
		"C_Cpp.default.intelliSenseMode": "linux-clang-x64",
		"C_Cpp.intelliSenseEngineFallback": "Enabled",
		"C_Cpp.vcpkg.enabled": false,
		"C_Cpp.workspaceSymbols": "All",
		"clang-format.assumeFilename": "/workspace/.clang-format",
		"clang-format.fallbackStyle": "Google",
		"clang-format.language.apex.enable": false,
		"clang-format.language.cuda.enable": false,
		"clang-format.language.glsl.enable": false,
		"clang-format.language.javascript.enable": false,
		"clang-format.language.objective-c.enable": false,
		"clang-format.language.objective-cpp.enable": false,
		"clang-format.language.typescript.enable": false,
		"clangd.path": "/usr/bin/clangd",
		"editor.formatOnSave": true,
		"editor.minimap.enabled": false,
		"editor.suggestSelection": "first",
		"extensions.ignoreRecommendations": true,
		"files.exclude": {
			"**/.clangd/**": true,
			"**/bazel-*/**": true,
		},
		"files.watcherExclude": {
			"**/.clangd/**": true,
			"**/bazel-*/**": true,
		},
		"git.autofetch": false,
		"grunt.autoDetect": "off",
		"gulp.autoDetect": "off",
		"simpleBrowser.focusLockIndicator.enabled": false,
		"workbench.editor.enablePreview": false,
		// Uncomment next lines if you don't want pass your host git settings into container
		//"remote.containers.copyGitConfig": false,
		//"remote.containers.gitCredentialHelperConfigLocation": "none",
	},
	"dockerComposeFile": "docker-compose.yml",
	"name": "C++ in Docker",
	"onCreateCommand": "setup_workspace.py",
	"overrideCommand": true,
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},
	"remoteUser": "vscode",
	"service": "dev",
	"workspaceFolder": "/workspace",
}